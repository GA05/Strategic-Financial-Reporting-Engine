
import { createClient } from '@supabase/supabase-js';
import { SUPABASE_URL, SUPABASE_ANON_KEY, FINANCIAL_TABLE_NAME } from '../constants';
import { Database, FinancialDataInsert, FinancialDataRow } from '../types';

const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY);

/**
 * ===================================================================================
 * IMPORTANT: One-Time Database Setup
 * ===================================================================================
 * For this application to work, you MUST create a table in your Supabase project.
 * 1. Go to your Supabase project dashboard.
 * 2. Click on the "SQL Editor" in the sidebar.
 * 3. Click "+ New query".
 * 4. Copy the entire SQL script below and paste it into the editor.
 * 5. Click the "RUN" button.
 *
 * --- COPY FROM HERE ---
 * 
 * CREATE TABLE IF NOT EXISTS financial_data (
 *   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
 *   created_at TIMESTAMPTZ DEFAULT NOW(),
 *   month TEXT NOT NULL UNIQUE,
 *   revenue NUMERIC,
 *   new_users INTEGER,
 *   conversion_rate NUMERIC
 * );
 * 
 * -- This enables the database to enforce that you can't have two entries for the same month.
 * ALTER TABLE financial_data ENABLE ROW LEVEL SECURITY;
 * 
 * -- This allows anyone to read the data from the table.
 * CREATE POLICY "Enable read access for all users"
 * ON public.financial_data
 * FOR SELECT
 * USING (true);
 * 
 * -- This allows anyone to insert new data into the table.
 * CREATE POLICY "Enable insert for all users"
 * ON public.financial_data
 * FOR INSERT
 * WITH CHECK (true);
 *
 * --- END COPY ---
 * ===================================================================================
 */

/**
 * Fetches all records from the financial data table.
 */
export const fetchFinancialData = async (): Promise<FinancialDataRow[]> => {
  const { data, error } = await supabase
    .from(FINANCIAL_TABLE_NAME)
    .select('*')
    .order('month', { ascending: true });

  if (error) {
    console.error('Supabase fetch error:', JSON.stringify(error, null, 2));
    throw new Error(`Failed to fetch data. Make sure you have created the '${FINANCIAL_TABLE_NAME}' table in Supabase. Check the console for more details.`);
  }

  return data || [];
};

/**
 * Inserts a new record into the financial data table.
 */
export const insertFinancialData = async (newData: FinancialDataInsert): Promise<FinancialDataRow[] | null> => {
    const { data, error } = await supabase
      .from(FINANCIAL_TABLE_NAME)
      .insert([newData])
      .select();

    if (error) {
        console.error('Supabase insert error:', JSON.stringify(error, null, 2));
        // Provide a more user-friendly error for unique constraint violation
        if (error.code === '23505') { // Postgres code for unique_violation
            throw new Error(`Failed to add data: An entry for the month "${newData.month}" already exists.`);
        }
        throw new Error('Failed to add data. Check the console for details.');
    }
    
    return data;
}
